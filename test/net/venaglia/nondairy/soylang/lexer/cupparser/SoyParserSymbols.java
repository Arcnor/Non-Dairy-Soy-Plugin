
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sat Aug 21 17:16:48 PDT 2010
//----------------------------------------------------

package net.venaglia.nondairy.soylang.lexer.cupparser;

/** CUP generated class containing symbol constants. */
public class SoyParserSymbols {
  /* terminals */
  public static final int SP_LITERAL = 39;
  public static final int GT = 68;
  public static final int TEMPLATE_TEXT = 2;
  public static final int PARAM = 29;
  public static final int NOTEQ = 77;
  public static final int TAB_LITERAL = 43;
  public static final int LBRACE_ERROR = 91;
  public static final int NAMESPACE = 30;
  public static final int RBRACK = 63;
  public static final int STRING_LITERAL_ESCAPE = 59;
  public static final int COMMA = 86;
  public static final int STRING_LITERAL_END = 57;
  public static final int RBRACE = 65;
  public static final int DIRECTIVE_COMMA = 49;
  public static final int RPAREN = 61;
  public static final int LBRACK = 62;
  public static final int LT = 69;
  public static final int LBRACE = 64;
  public static final int LPAREN = 60;
  public static final int LITERAL = 22;
  public static final int INTEGER_LITERAL = 54;
  public static final int NOT = 70;
  public static final int ILLEGAL_CLOSE_TAG = 94;
  public static final int TAG_RBRACE = 6;
  public static final int ILLEGAL_TAG_DECLARATION = 93;
  public static final int PARAMETER_REF = 15;
  public static final int UNEXPECTED_EOF_IN_LITERAL_BLOCK = 95;
  public static final int DUPLICATE_NAMESPACE_DECLARATION = 87;
  public static final int TAG_LBRACE = 5;
  public static final int EQ = 66;
  public static final int BAD_STRING_ESCAPE = 88;
  public static final int MOD = 83;
  public static final int BOOLEAN_LITERAL = 53;
  public static final int DOC_COMMENT_TAG = 12;
  public static final int CAPTURED_IDENTIFIER = 19;
  public static final int STRING_PARAMETER_REF = 16;
  public static final int PIPE = 84;
  public static final int PLUS = 78;
  public static final int UNTERMINATED_TEMPLATE = 90;
  public static final int CR_LITERAL = 41;
  public static final int QUESTION = 73;
  public static final int ELSE_IF = 33;
  public static final int CAPTURED_FUNCTION_IDENTIFIER = 20;
  public static final int SWITCH = 25;
  public static final int FOR = 27;
  public static final int TEMPLATE_IDENTIFIER = 18;
  public static final int DIV = 82;
  public static final int MULT = 81;
  public static final int ELSE = 34;
  public static final int TAG_END_RBRACE = 8;
  public static final int UNEXPECTED_EOF_DOC_COMMENT = 98;
  public static final int GTEQ = 76;
  public static final int DOT = 85;
  public static final int STRING_LITERAL_BEGIN = 56;
  public static final int RBRACE_ERROR = 92;
  public static final int NULL_LITERAL = 52;
  public static final int STRING_LITERAL = 58;
  public static final int EQEQ = 67;
  public static final int EOF = 0;
  public static final int LF_LITERAL = 42;
  public static final int TAG_END_LBRACE = 7;
  public static final int COMMENT = 10;
  public static final int DEFAULT = 36;
  public static final int NIL_LITERAL = 40;
  public static final int LITERAL_TEXT = 4;
  public static final int PRINT = 31;
  public static final int UNTERMINATED_STRING_LITERAL = 89;
  public static final int LB_LITERAL = 44;
  public static final int MINUS = 80;
  public static final int LTEQ = 75;
  public static final int IGNORED_TEXT = 3;
  public static final int MSG = 23;
  public static final int NAMESPACE_IDENTIFIER = 17;
  public static final int IN = 50;
  public static final int OR = 72;
  public static final int DIRECTIVE_IDENTIFIER = 46;
  public static final int error = 1;
  public static final int WHITESPACE = 9;
  public static final int IF = 24;
  public static final int DOC_COMMENT_END = 14;
  public static final int IF_EMPTY = 37;
  public static final int COLON = 74;
  public static final int DIRECTIVE_PIPE = 47;
  public static final int DOC_COMMENT_IDENTIFIER = 13;
  public static final int TEMPLATE = 21;
  public static final int UNEXPECTED_EOF_IN_TAG_DECLARATION = 96;
  public static final int DIRECTIVE_COLON = 48;
  public static final int FOREACH = 26;
  public static final int CASE = 35;
  public static final int RANGE = 51;
  public static final int UNEXPECTED_EOF_IN_STRING_LITERAL = 97;
  public static final int RB_LITERAL = 45;
  public static final int AND = 71;
  public static final int UMINUS = 79;
  public static final int DOC_COMMENT = 11;
  public static final int CALL = 28;
  public static final int PRINT_IMPLICIT = 32;
  public static final int CSS = 38;
  public static final int FLOATING_POINT_LITERAL = 55;

  /* non terminals */
  static final int string_literal_buf = 70;
  static final int closing_if_tag = 25;
  static final int foreach_seq = 51;
  static final int binary_operator = 71;
  static final int content_sequence = 62;
  static final int non_content_tag = 14;
  static final int expr = 65;
  static final int special_char_tag = 15;
  static final int begin_if_tag = 37;
  static final int string_literal = 69;
  static final int begin_param_tag = 41;
  static final int simple_directive = 59;
  static final int begin_call_tag = 42;
  static final int special_char = 16;
  static final int skip_element = 3;
  static final int for_tag = 19;
  static final int dot_reference = 66;
  static final int template_ident = 9;
  static final int dir_expr_list = 64;
  static final int else_tag = 31;
  static final int case_tag = 32;
  static final int compound_directive = 60;
  static final int template_def = 8;
  static final int template_doc_buffer = 7;
  static final int switch_tag = 22;
  static final int end_switch_tag = 46;
  static final int content_tag = 13;
  static final int end_if_tag = 45;
  static final int begin_msg_tag = 36;
  static final int end_param_tag = 50;
  static final int attribute = 56;
  static final int end_for_tag = 48;
  static final int end_template_tag = 12;
  static final int ifempty_tag = 34;
  static final int expr_list = 63;
  static final int for_range = 53;
  static final int template_tag = 10;
  static final int skip_element_list = 2;
  static final int for_seq = 52;
  static final int open_if_tag = 24;
  static final int namespace_ident = 5;
  static final int directive_list = 57;
  static final int param_tag = 20;
  static final int msg_tag = 18;
  static final int begin_switch_tag = 38;
  static final int default_tag = 33;
  static final int foreach_tag = 23;
  static final int literal_value = 68;
  static final int directive = 58;
  static final int literal_tag = 17;
  static final int if_tag = 21;
  static final int template_list = 1;
  static final int template_doc_comment = 6;
  static final int print_tag = 29;
  static final int end_foreach_tag = 47;
  static final int open_switch_tag = 26;
  static final int else_if_tag = 30;
  static final int template_file = 0;
  static final int begin_foreach_tag = 39;
  static final int begin_literal_tag = 35;
  static final int closing_switch_tag = 27;
  static final int dir_expr = 67;
  static final int namespace_def = 4;
  static final int content_element = 61;
  static final int end_literal_tag = 43;
  static final int param_list = 54;
  static final int begin_for_tag = 40;
  static final int begin_template_tag = 11;
  static final int end_msg_tag = 44;
  static final int end_call_tag = 49;
  static final int attribute_list = 55;
  static final int call_tag = 28;
}

